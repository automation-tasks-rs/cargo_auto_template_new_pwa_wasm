var searchIndex = new Map(JSON.parse('[\
["rust_project_name",{"doc":"rust_project_name","t":"GPPCHEHHCHHHHHHHHSGSSPPSNNNNEENCNNNNNCEHHHEHHHHHCHHHHFNNNNONNNNNNNNN","n":["LibraryError","Unknown","Uppercase","main_mod","wasm_bindgen_start","LibraryError","get_args_from_hash_fragment","header","lib_mod","main","on_click_btn_run","on_hash_change","page_with_inputs","print_greet_name","print_help","routing_by_arguments","upper_greet_name","GREEN","LibraryError","RED","RESET","Unknown","Uppercase","YELLOW","borrow","borrow_mut","fmt","fmt","format_hello_phrase","format_upper_hello_phrase","from","hello_mod","into","to_string","try_from","try_into","type_id","web_sys_mod","wsm","format_hello_phrase","format_upper_hello_phrase","make_uppercase","HtmlSourceCode","add_listener_for_onhashchange","add_listener_to_button","get_element_by_id","get_html_element_by_id","get_input_element_value_string_by_id","html_source_code_mod","now_time_as_string","open_url","set_html_element_inner_text","window","HtmlSourceCode","borrow","borrow_mut","from","get_html","html","inject_into_dom_element","into","new","replace_attribute_value","replace_html_source_code","replace_text_node","try_from","try_into","type_id"],"q":[[0,"rust_project_name"],[5,"rust_project_name::main_mod"],[17,"rust_project_name::main_mod::lib_mod"],[39,"rust_project_name::main_mod::lib_mod::hello_mod"],[42,"rust_project_name::main_mod::lib_mod::web_sys_mod"],[53,"rust_project_name::main_mod::lib_mod::web_sys_mod::html_source_code_mod"],[68,"wasm_bindgen"],[69,"core::result"],[70,"alloc::string"],[71,"alloc::vec"],[72,"anyhow"],[73,"core::fmt"],[74,"core::fmt"],[75,"core::ops::function"],[76,"web_sys::features::gen_Element"],[77,"web_sys::features::gen_HtmlElement"],[78,"web_sys::features::gen_Window"]],"d":["LibraryError must be accessible in every module. all …","","","This module is like a main.rs module for a binary CLI …","To start the Wasm application, wasm_bindgen runs this …","","get args from hash fragment","render header with Home and Help  ","This module is like a lib.rs module for a binary CLI …","entry point just like for cli-bin-executable","the listener calls this function  ","the listener calls this function  ","render first page  ","print my name  ","print help  ","routing by arguments routing can come from:","print my name upper, can return error  ","","all possible library errors for <code>thiserror</code>","","","","","","","","","","","","Returns the argument unchanged.","All the real code (program logic) is inside modules in …","Calls <code>U::from(self)</code>.","","","","","Helper functions for web_sys, window, document, dom, …","","format the hello phrase","format the hello phrase with uppercase name if it is …","return uppercase","","add event listener for onhashchange  ","add event listener for button  ","get element by id  ","get html element by id  ","get input element value string by id  ","html_source_code_mod.rs","Wasm must read time from javascript.  ","open URL in same tab (PWA don’t have tabs, only one …","set inner text  ","return the global window object  ","HtmlSourceCode - type to manipulate HTML source code safer …","","","Returns the argument unchanged.","get the well formed html We trust the programmer to …","","Injects the HTMLSourceCode into a DOM element. We trust …","Calls <code>U::from(self)</code>.","The programmer provides a &amp;’static str to initiate …","The attribute value must be double_quoted. We trust the …","We expect the HtmlSourceCode to be well formed. For that …","This must be pure text, no html element are allowed for …","","",""],"i":[0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,8,8,8,8,0,0,8,0,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":"````{{}{{f{bd}}}}`{{}{{j{h}}}}{{}b}`0000{lb}1{{{j{h}}}b}{l{{n{b}}}}```````{ce{}{}}0{{A`Ab}Ad}0``{cc{}}`2{ch{}}{c{{f{e}}}{}{}}0{cAf{}}``{lh}{l{{f{hA`}}}}1`{Ahb}{{lAh}b}{lAj}{lAl}5`{{}h}?{{ll}b}{{}An}`>><{B`h}`{{B`l}b}{ce{}{}}{lB`}{{B`ll}b}{{B`lB`}b}1{c{{f{e}}}{}{}}0{cAf{}}","c":[],"p":[[1,"unit"],[5,"JsValue",68],[6,"Result",69],[5,"String",70],[5,"Vec",71],[1,"str"],[8,"Result",72],[6,"LibraryError",17],[5,"Formatter",73],[8,"Result",73],[5,"TypeId",74],[10,"Fn",75],[5,"Element",76],[5,"HtmlElement",77],[5,"Window",78],[5,"HtmlSourceCode",53]],"b":[[26,"impl-Debug-for-LibraryError"],[27,"impl-Display-for-LibraryError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
